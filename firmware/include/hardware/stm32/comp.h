#ifndef STM32_COMP_H
#define STM32_COMP_H

#include <stdint.h>
#include <hardware/stm32/mmap.h>

typedef enum
{
	STM32_COMP_INMSEL_VREFINT_1_4 = 0,
	STM32_COMP_INMSEL_VREFINT_1_2 = 1,
	STM32_COMP_INMSEL_VREFINT_3_4 = 2,
	STM32_COMP_INMSEL_VREFINT     = 3,

	STM32_COMP1_INMSEL_DAC3_CH1 = 4,
	STM32_COMP1_INMSEL_DAC1_CH1 = 5,
	STM32_COMP1_INMSEL_PA4      = 6,
	STM32_COMP1_INMSEL_PA0      = 7,

	STM32_COMP2_INMSEL_DAC3_CH2 = 4,
	STM32_COMP2_INMSEL_DAC1_CH2 = 5,
	STM32_COMP2_INMSEL_PA5      = 6,
	STM32_COMP2_INMSEL_PA2      = 7,

	STM32_COMP3_INMSEL_DAC3_CH1 = 4,
	STM32_COMP3_INMSEL_DAC1_CH1 = 5,
	STM32_COMP3_INMSEL_PF1      = 6,
	STM32_COMP3_INMSEL_PC0      = 7,

	STM32_COMP4_INMSEL_DAC3_CH2 = 4,
	STM32_COMP4_INMSEL_DAC1_CH1 = 5,
	STM32_COMP4_INMSEL_PE8      = 6,
	STM32_COMP4_INMSEL_PB2      = 7,

	STM32_COMP5_INMSEL_DAC4_CH1 = 4,
	STM32_COMP5_INMSEL_DAC1_CH2 = 5,
	STM32_COMP5_INMSEL_PB10     = 6,
	STM32_COMP5_INMSEL_PD13     = 7,

	STM32_COMP6_INMSEL_DAC4_CH2 = 4,
	STM32_COMP6_INMSEL_DAC2_CH1 = 5,
	STM32_COMP6_INMSEL_PD10     = 6,
	STM32_COMP6_INMSEL_PB15     = 7,

	STM32_COMP7_INMSEL_DAC4_CH1 = 4,
	STM32_COMP7_INMSEL_DAC2_CH1 = 5,
	STM32_COMP7_INMSEL_PD15     = 6,
	STM32_COMP7_INMSEL_PB12     = 7,
} stm32_comp_inmsel_e;

typedef enum
{
	STM32_COMP1_INPSEL_PA1 = 0,
	STM32_COMP1_INPSEL_PB1 = 1,

	STM32_COMP2_INPSEL_PA7 = 0,
	STM32_COMP2_INPSEL_PA3 = 1,

	STM32_COMP3_INPSEL_PA0 = 0,
	STM32_COMP3_INPSEL_PC1 = 1,

	STM32_COMP4_INPSEL_PB0 = 0,
	STM32_COMP4_INPSEL_PE7 = 1,

	STM32_COMP5_INPSEL_PB13 = 0,
	STM32_COMP5_INPSEL_PD12 = 1,

	STM32_COMP6_INPSEL_PB11 = 0,
	STM32_COMP6_INPSEL_PD11 = 1,

	STM32_COMP7_INPSEL_PB14 = 0,
	STM32_COMP7_INPSEL_PD14 = 1,
} stm32_comp_inpsel_e;

typedef enum
{
	STM32_COMP_BLANKSEL_NONE      = 0,
	STM32_COMP_BLANKSEL_TIM20_OC5 = 5,
	STM32_COMP_BLANKSEL_TIM15_OC1 = 6,
	STM32_COMP_BLANKSEL_TIM4_OC3  = 7,

	STM32_COMP1_BLANKSEL_TIM1_OC5  = 1,
	STM32_COMP1_BLANKSEL_TIM2_OC3  = 2,
	STM32_COMP1_BLANKSEL_TIM3_OC3  = 3,
	STM32_COMP1_BLANKSEL_TIM8_OC5  = 4,

	STM32_COMP2_BLANKSEL_TIM1_OC5  = 1,
	STM32_COMP2_BLANKSEL_TIM2_OC3  = 2,
	STM32_COMP2_BLANKSEL_TIM3_OC3  = 3,
	STM32_COMP2_BLANKSEL_TIM8_OC5  = 4,

	STM32_COMP3_BLANKSEL_TIM1_OC5  = 1,
	STM32_COMP3_BLANKSEL_TIM3_OC3  = 2,
	STM32_COMP3_BLANKSEL_TIM2_OC4  = 3,
	STM32_COMP3_BLANKSEL_TIM8_OC5  = 4,

	STM32_COMP4_BLANKSEL_TIM3_OC4  = 1,
	STM32_COMP4_BLANKSEL_TIM8_OC5  = 2,
	STM32_COMP4_BLANKSEL_TIM15_OC1 = 3,
	STM32_COMP4_BLANKSEL_TIM1_OC5  = 4,

	STM32_COMP5_BLANKSEL_TIM2_OC3  = 1,
	STM32_COMP5_BLANKSEL_TIM8_OC5  = 2,
	STM32_COMP5_BLANKSEL_TIM3_OC3  = 3,
	STM32_COMP5_BLANKSEL_TIM1_OC5  = 4,

	STM32_COMP6_BLANKSEL_TIM8_OC5  = 1,
	STM32_COMP6_BLANKSEL_TIM2_OC4  = 2,
	STM32_COMP6_BLANKSEL_TIM15_OC2 = 3,
	STM32_COMP6_BLANKSEL_TIM1_OC5  = 4,

	STM32_COMP7_BLANKSEL_TIM1_OC5  = 1,
	STM32_COMP7_BLANKSEL_TIM8_OC5  = 2,
	STM32_COMP7_BLANKSEL_TIM3_OC3  = 3,
	STM32_COMP7_BLANKSEL_TIM15_OC2 = 4,
} stm32_comp_blanksel_e;

typedef union
{
	struct
	{
		uint32_t en       : 1;
		uint32_t res3_1   : 3;
		uint32_t inmsel   : 3;
		uint32_t res7     : 1;
		uint32_t inpsel   : 1;
		uint32_t res14_9  : 6;
		uint32_t pol      : 1;
		uint32_t hyst     : 3;
		uint32_t blanksel : 3;
		uint32_t brgen    : 1;
		uint32_t scalen   : 1;
		uint32_t res29_24 : 6;
		uint32_t value    : 1;
		uint32_t lock     : 1;
	};

	uint32_t mask;
} stm32_comp_t;

static volatile stm32_comp_t * const stm32_comp = (volatile stm32_comp_t *)STM32_MMAP_COMP;

#endif
